buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.25'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.1'
        classpath "com.palantir.gradle.gitversion:gradle-git-version:0.12.3"
    }
}

plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBoot}"
    id 'io.spring.dependency-management' version "${dependencyManagement}"
    id 'org.sonarqube' version '3.0'
}

repositories {
    mavenCentral()
}

allprojects {
    group = 'com.paypal'
    version = projectVersion
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'java'
    apply plugin: 'io.spring.javaformat'
    apply plugin: 'info.solidsoft.pitest'
    apply plugin: 'jacoco'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(15)
        }
    }

    pitest {
        junit5PluginVersion = '0.12'
    }

    ext {
        set('springCloudVersion', "Hoxton.SR8")
    }

    repositories {
        mavenCentral()
        maven {
            credentials {
                username "$System.env.PAYPAL_MIRAKL_SDK_USER"
                password "$System.env.PAYPAL_MIRAKL_SDK_PASSWORD"
            }
            url "https://artifactory.mirakl.net/artifactory/mirakl-ext-repo/"
        }
    }

    test {
        useJUnitPlatform()
    }

    dependencyManagement {
        overriddenByDependencies = false
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    compileJava {
        dependsOn format
    }


    jacoco {
        toolVersion = "0.8.6"
        reportsDirectory = file("$buildDir/reports/jacoco") // Default value
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.enabled true
            csv.enabled false
            html.enabled true
        }
    }

    bootBuildImage {
        environment =
            environment = ["BP_JVM_VERSION"              : "17",
                           "BPE_DELIM_JAVA_TOOL_OPTIONS" : " ",
                           "BPE_APPEND_JAVA_TOOL_OPTIONS": "-Xms256m -Xmx1g"
            ]
    }


    springBoot {
        buildInfo()
    }
}

bootJar {
    enabled = false
}

apply from: 'gradle/sonarqube.gradle'
apply from: 'gradle/dockerCompose.gradle'

File file = new File("internal-gradle-tasks/createBuild.gradle")
if (file.exists()) {
    apply from: 'internal-gradle-tasks/createBuild.gradle'
}
